<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Marín's - Blog</title><link>https://marinhero.com/posts/</link><description>Recent content in Posts on Marín's - Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 05 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://marinhero.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Calculate your One Rep Max Easily using Deno, Denoflare and iOS Shortcuts</title><link>https://marinhero.com/posts/rpe-max/</link><pubDate>Sun, 05 Mar 2023 00:00:00 +0000</pubDate><guid>https://marinhero.com/posts/rpe-max/</guid><description>&lt;h2 id="what-is-this">What is this?&lt;/h2>
&lt;p>&lt;a href="https://github.com/marinhero/rpemax">This&lt;/a> is a program that automates the process we follow at my gym to calculate the weight we should lift in our sets based on our RPE, one rep max, and set count.&lt;/p>
&lt;h2 id="what-is-rpe">What is RPE?&lt;/h2>
&lt;p>RPE stands for Rate of Perceived Exertion. It is a subjective measure used to gauge the intensity of exercise or physical activity, based on an individual&amp;rsquo;s personal perception of how hard they feel they are working.&lt;/p></description></item><item><title>Do’s and don’ts for a successful SDE internship</title><link>https://marinhero.com/posts/segment-internship/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://marinhero.com/posts/segment-internship/</guid><description>&lt;p>Last summer, I had the opportunity to mentor an intern at Twilio Segment. This was a first for me and I really enjoyed it.
The experience opened a new avenenue for my career that I want to keep exploring.&lt;/p>
&lt;p>By the end of the internship, Kevin (the intern) and I co-wrote a blogpost with some of our learnings and titled it &lt;a href="https://segment.com/blog/dos-and-donts-for-successful-sde-internship/">do’s and don’ts for a successful SDE internship&lt;/a> go check it out!&lt;/p></description></item><item><title>Tetris, in TypeScript</title><link>https://marinhero.com/posts/typescript-tetris/</link><pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate><guid>https://marinhero.com/posts/typescript-tetris/</guid><description>&lt;p>With the intention of getting more familiarized with TypeScript, I decided to start a new project.
It&amp;rsquo;s been many years since the last time I made a game from scrath so it seemed fitting to give that a go.
I chose Tetris because it&amp;rsquo;s a well known game, with a defined set of problems and functionality. All I had to worry about was to code their solutions.&lt;/p>
&lt;h1 id="the-typescript-lesson">The TypeScript Lesson&lt;/h1>
&lt;p>I did get more familiar with TypeScript, some of its strengths, caveats and tooling. Still, it would be hard (or overengineered) to cover all of the language features in a project. One important feature I left out is &lt;a href="https://www.typescriptlang.org/docs/handbook/2/generics.html">generics&lt;/a>, perhaps I need to start working on &lt;a href="https://en.wikipedia.org/wiki/Space_Invaders">Space Invaders&lt;/a> now so I can give it a try?&lt;/p></description></item><item><title>Never Lose Another Bash Command Ever Again!</title><link>https://marinhero.com/posts/bash-history/</link><pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate><guid>https://marinhero.com/posts/bash-history/</guid><description>&lt;p>Every once in awhile, I would find a Bash shell command that gets me out of a big problem. After hours of troubleshooting, I would find THE command, run it, and then I would move on and forget about that command. The next time I faced the same issue, I might remember the command, but if not I would try to get it from my Bash history using the command:&lt;code>$&amp;gt; history&lt;/code>. I’ve had mixed results with this method because sometimes the command I was looking for was run months ago and it’s long gone from my Bash history.&lt;/p></description></item><item><title>x86, x64, ARM? I Just Want to Download my Program!</title><link>https://marinhero.com/posts/architectures/</link><pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate><guid>https://marinhero.com/posts/architectures/</guid><description>&lt;p>More often than not, when I go to a website to download a program I find a screen like this.&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/Ufm7b20.png" alt="Downloads">&lt;/p>
&lt;p>These are some of the questions that come to my mind.&lt;/p>
&lt;ul>
&lt;li>Why are there so many options?&lt;/li>
&lt;li>Why don&amp;rsquo;t we just create one universal binary format so we don&amp;rsquo;t have to decide this?&lt;/li>
&lt;li>Aren&amp;rsquo;t computers supposed to just &lt;strong>speak&lt;/strong> in zeroes and ones?&lt;/li>
&lt;li>What happens if I download the wrong binary?&lt;/li>
&lt;li>Are architectures compatible with each other?&lt;/li>
&lt;/ul>
&lt;p>I usually know the architecture of the CPU my computer is running, so the decision-making process is straightforward, but I don’t really know the real reason behind picking one binary over another. I decided to clear that doubt from my mind, and hopefully, these answers will clarify the questions for you too.&lt;/p></description></item><item><title>Ports and Port Scanners</title><link>https://marinhero.com/posts/port-scanning/</link><pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate><guid>https://marinhero.com/posts/port-scanning/</guid><description>&lt;p>Have you ever wondered how an attacker knows which services to target? How can they determine which exploit they should use? port scanning is what gives the initial pieces of intel to them. It’s part of the process known as fingerprinting that will determine what in a system has the potential to be exploited. Let me tell you a story about what’s possible with this information:&lt;/p>
&lt;p>In April 2017, &lt;a href="https://en.wikipedia.org/wiki/The__Shadow_Brokers">The Shadow Brokers&lt;/a> leaked an exploit developed by the NSA named &lt;a href="https://en.wikipedia.org/wiki/EternalBlue">EternalBlue&lt;/a>. This exploit took advantage of a vulnerability on the SMB service (commonly used as printer share service) that granted an unauthenticated remote attacker to execute arbitrary code via specially crafted requests sent to the SMB server.&lt;/p></description></item></channel></rss>